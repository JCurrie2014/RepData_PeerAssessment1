{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\nauthor: \"Jerry Currie\"\ndate: \"2015-02-13\"\noutput:  \n  html_document: \n    keep_md: true\n---\n## Contents\n- Overview\n- Load Libraries & Version Info \n- Loading and preprocessing the data *\n- What is mean total number of steps taken per day? *\n- What is the average daily activity pattern? *\n- Imputing missing values *\n- Are there differences in activity patterns between weekdays and weekends? *\n\n\n(note: asterisk * represents assignment requirement) \n## Overview ########################################################\nThe objective of this project is to build a knitr document containing\nall the required information to reproduce an experiement. The \nexperiment is to read in a set of data that's missing about 15%\nof its values. Plots are made to illustate how similar plots appear,\neven if missing values are replaced with averages. \n\nQuestions are also answered about exercise times for a population\ncounting steps taken each day. The raw data (activity.csv) can be found at:\nhttps://github.com/JCurrie2014/RepData_PeerAssessment1\n\n\n## Load Libraries & Version Info  ################################## \n- OS: Windows 7 Home Premium\n- R: Version 3.1.2\n- Rstudio: Version 0.98.1091\n- knitr: Version 1.9 \n\n```{r}\nlibrary(dplyr) # Version 0.40\nlibrary(lubridate) # Version 1.33\nlibrary(timeDate )# Version \n```\n \n\n## Loading and preprocessing the data * ############################ \nThe only data file (activity.csv) is read into a data frame named \ndfactivity. An identity field is added so that merging can be easily \naccomplished later in the project. A second data frame is created that\nexcludes NAs that will be used for the first section of the assignment.\n```{r}\necho = TRUE\n#Read data file \ndfactivity<-read.csv(\"activity.csv\")\ndfactivity$id<-1:nrow(dfactivity)    #Assign id to each row (will be used for imputing NA values)\ndfactnaf<-na.omit(dfactivity) # remove NA and create data set for 1\n\n# 1) #### Histogram without NAs in data set #########################\n#Populate variables for histogram and averages\ngrp <- group_by(dfactnaf, date) #Group by date\nsumsteps<-summarise(grp, sum=sum(steps)) #sum steps by day\n\n#Calclate mean and median outputs\nmeanperday<-mean(sumsteps$sum)  #calculate mean steps per day\nmedianperday<-median(sumsteps$sum) #calculate median steps per day\n\n# 2) ####  Average steps per 5-minute time interval #################\ngrp2<-group_by(dfactnaf,interval) #Group by interval\nsumstepsinterval<-summarise(grp2, sum=sum(steps)) #average steps by interval\nsumstepsinterval$avgstepperday<-sumstepsinterval$sum/nrow(sumsteps) # Calculate average\n\n#build interval string for time by additing 10000 to each interval.\n#this will allows taking the 2&3 values as hours and the 4&5 values\n#as minutes without incurring an error from the earlier time intervals.\nsumstepsinterval$K<-sumstepsinterval$interval+10000 \n#Get max avg step per day info \nmaxavgstepperday<-sumstepsinterval[which(sumstepsinterval[, 3] == max(sumstepsinterval$avgstepperday)), ]\n\n#Calculate time of day from 5-minute interval\nt<-as.POSIXlt(\"1970-01-01 00:00:00 PST\") #initialize time\ntmpmin<-substr(toString(maxavgstepperday$K),4,5)\ntmphour<-substr(toString(maxavgstepperday$K),2,3)\nt$min<-t$min + as.numeric(tmpmin)\nt$hour<-t$hour+as.numeric(tmphour)\ntcvt<-strftime(t, format = \"%I:%M:%S %p\")\n\n# 3) ####  Imputing values for NAs #################################\n#Get NA count from original data set\nsumna<-sum(is.na(dfactivity$step))\n#Create NA subset of dfactivity\ndfisna<-dfactivity[is.na(dfactivity[,1])==T,]\n#Join on sumstepsinterval$interval return \najoin<-merge(dfisna, sumstepsinterval, by=\"interval\")\n#update NA steps with avg step per day for interval\najoin$steps<-ajoin$avgstepperday\n#Row bind dfactnaf with ajoin data frame to build completely filled\n#version of the original data set (dfactivity)\ntempactivity<-rbind(dfactnaf, ajoin[,c(1:4)])\nnewactivity<-arrange(tempactivity, id) \n\n#Populate variables for histogram and averages\ngrp3 <- group_by(newactivity, date) #Group by date\nsumsteps3<-summarise(grp3, sum=sum(steps)) #sum steps by day\n#Calclate mean and median outputs\nmeanperday3<-mean(sumsteps3$sum)  #calculate mean steps per day\nmedianperday3<-median(sumsteps3$sum) #calculate median steps per day\n\n# 4) ####  Create Weedend & Weekday plots ##########################\n#Create field for identifying weekdays and weekend (weekday)\nnewactivity$weekday[isWeekday(newactivity$date) == T] <- \"Weekday\"\nnewactivity$weekday[isWeekday(newactivity$date) == F] <- \"Weekend\"\n#create data frames separating weekday and weekends\ndfweekend<-newactivity[which(newactivity[, 5] == \"Weekend\"), ]\ndfweekday<-newactivity[which(newactivity[, 5] == \"Weekday\"), ]\n\n#Create Weekend group\ngrp4<-group_by(dfweekend,interval) #Group by interval\nwesumstepsinterval<-summarise(grp4, sum=sum(steps)) #average steps by interval\nwesumstepsinterval$avgstepperdaywe<-wesumstepsinterval$sum/nrow(sumsteps)\n#build interval string for time by additing 10000 to each interval.\n#this will allows taking the 2&3 values as hours and the 4&5 values\n#as minutes without incurring an error from the earlier time intervals.\nwesumstepsinterval$K<-wesumstepsinterval$interval+10000 \n#Get max avg step per day info \nmaxavgstepperday3<-wesumstepsinterval[which(wesumstepsinterval[, 3] == max(wesumstepsinterval$avgstepperdaywe)), ]\n\n#Create Weekday group\ngrp5<-group_by(dfweekday,interval) #Group by interval\nwdsumstepsinterval<-summarise(grp5, sum=sum(steps)) #average steps by interval\nwdsumstepsinterval$avgstepperdaywd<-wdsumstepsinterval$sum/nrow(sumsteps)\n#build interval string for time by additing 10000 to each interval.\n#this will allows taking the 2&3 values as hours and the 4&5 values\n#as minutes without incurring an error from the earlier time intervals.\nwdsumstepsinterval$K<-wdsumstepsinterval$interval+10000 \n#Get max avg step per day info \nmaxavgstepperday4<-wdsumstepsinterval[which(wdsumstepsinterval[, 3] == max(wdsumstepsinterval$avgstepperdaywd)), ]\n\n```\n \n\n\n## What is mean total number of steps taken per day? * #############\nThe histogram (below) shows number of steps per day grouped into clusters.\nThe frequency represents the number of times data fell into each\ncluster.\n\nThe mean and median steps per day are also computed. \n\n```{r}\n# 1) Histogram without NAs in data set\n#histogram of steps per day\nhist(sumsteps$sum, main=\"Steps per day\\n (Histogram without NAs)\",ylab=\"Frequency\", xlab=\"Steps\", breaks=nrow(sumsteps), col=\"red\")\n```\n\n- The average (mean) number of steps is <b>`r format(meanperday, big.mark=\",\")`</b> over `r nrow(sumsteps)` days.\n- The median number of steps is <b>`r format(medianperday, big.mark=\",\")`</b> over `r nrow(sumsteps)` days.\n\n\n## What is the average daily activity pattern?\n### Weekday Activity\nThere are `r nrow(sumstepsinterval)` 5-minute time intervals ranging from 0 to 2355. The x-axis corresponds to the specific interval break points found in the data set. NAs have been excluded from the computation.\n```{r}\n# 2) ####  Average steps per 5-minute time interval #################\nplot(sumstepsinterval$avgstepperday,type=\"l\", xaxt=\"n\",  xlab=\"5-minute step intervals\", ylab=\"Avg steps per day\", main=\"Average Daily Activity\\n (NAs excluded from data set) \")\naxis(1, at=c(1,49,97,145,193,241,288), labels=c(\"12:00 am\",\"4:00\",\"8:00\",\"12:00 pm\",\"4:00\",\"8:00\",\"12:00 am\"))\n \n```\n\n- The time inteval ''`r paste(maxavgstepperday$interval,maxavgstepperday$interval+5,sep=\"-\")`'' contains the highest average number of steps at: <b>`r round(maxavgstepperday$avgstepperday,2)`</b> per day\n\n- The most popular time of day for stepping is:<b> `r tcvt`</b>.\n\n(note: The data contains 12 5-minute groups per hour (0-55). After reaching the 12th member of the group (interval ending in 55), the interval's hundred digit is incremented representing the current hour (i.e. The interval 100=1:00 am, 105=1:05 am ... 2355 = 11:55 pm.))\n\n \n## Imputing missing values\n- There are <b>`r sumna`</b> missing values (NAs) in the main data set of <b>`r nrow(dfactivity)`</b> records.\n\nCreate data for Histogram containing average step values for all NAs in original data set.NA were replaced with\nthe average (mean) steps per interval.\n\n```{r}\n# 3) ####  Imputing values for NAs #################################\n#histogram of steps per day using imputed values\nhist(sumsteps3$sum, main=\"Steps per day\\n (NAs replaced with imputed values)\",ylab=\"Frequency\" , xlab=\"Steps\", breaks=nrow(sumsteps3), col=\"red\") \n\n```\n\n- The average (mean) number of steps is <b>`r format(meanperday3, big.mark=\",\")`</b> over `r nrow(sumsteps3)` days.\n- The median number of steps is <b>`r format(medianperday3, big.mark=\",\")`</b> over `r nrow(sumsteps3)` days.\n\n## Are there differences in activity patterns between weekdays and weekends?\nThere were a lot more steps taken during the week than the weekend. The y-axis on\nthe weekend plot uses the max average steps from the weekday data to show true\nrelationship.\n\n \n```{r}\n##################  Plot 4 Charts ###########################################\n# 4) ####  Create Weedend & Weekday plots ##########################\npar(mfrow=c(2,1))\npar(pin=c(5,1))\n#First plot Weekend scaled to maximum weekday\nplot(wesumstepsinterval$avgstepperdaywe,type=\"l\", ylim=c(0,max(wdsumstepsinterval$avgstepperdaywd)), xaxt=\"n\",  xlab=\"5-minute step intervals\", ylab=\"Avg steps per day\", main=\"Average Weekend Daily Activity\\n (NAs replaced with imputed values) \")\naxis(1, at=c(1,49,97,145,193,241,288), labels=c(\"12:00 am\",\"4:00\",\"8:00\",\"12:00 pm\",\"4:00\",\"8:00\",\"12:00 am\"))\n#Second plot weekday\nplot(wdsumstepsinterval$avgstepperdaywd,type=\"l\", xaxt=\"n\",  xlab=\"5-minute step intervals\", ylab=\"Avg steps per day\", main=\"Average Weekday Daily Activity\\n (NAs replaced with imputed values)\")\naxis(1, at=c(1,49,97,145,193,241,288), labels=c(\"12:00 am\",\"4:00\",\"8:00\",\"12:00 pm\",\"4:00\",\"8:00\",\"12:00 am\"))\n\n \n```\n\n\n\n\n\n\n ",
    "created" : 1423529473810.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1483208320",
    "id" : "6C722A58",
    "lastKnownWriteTime" : 1423889308,
    "path" : "C:/__edu/Git/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}